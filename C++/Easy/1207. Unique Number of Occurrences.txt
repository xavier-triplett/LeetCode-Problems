1207. Unique Number of Occurrences

Question:

Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000



Solution:

class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        vector<int> counts;
        map<int,int> occurrences;
        for (int num : arr) {
            if (occurrences.count(num) > 0) {
                occurrences[num]++;
            } else {
                occurrences[num] = 1;
            }
        }
        for (const auto& item : occurrences) {
            counts.push_back(item.second);
            for (int i = 0; i < (counts.size() - 1); i++) {
                if (item.second == counts[i]) return false;
            }
        }
        return true;
    }
};